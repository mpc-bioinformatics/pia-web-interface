<html xmlns="http://www.w3.org/1999/xhtml"
		xmlns:cc="http://java.sun.com/jsf/composite"
		xmlns:c="http://java.sun.com/jsp/jstl/core"
		xmlns:f="http://java.sun.com/jsf/core"
		xmlns:h="http://java.sun.com/jsf/html"
		xmlns:ui="http://java.sun.com/jsf/facelets"
    	xmlns:rich="http://richfaces.org/rich"
    	xmlns:a4j="http://richfaces.org/a4j"
    	xmlns:pia="http://java.sun.com/jsf/composite/pia"
    	xmlns:piacomponents="http://de.mpc.pia/components"
    	xmlns:peptide="http://java.sun.com/jsf/composite/peptideviewer"
    	xmlns:protein="http://java.sun.com/jsf/composite/proteinviewer">

<head>
	<title>Renders the header and columns of a table for a list of Proteins</title>
</head>

<body>
	<ui:composition>
		<f:facet name="header">
			<rich:columnGroup>
				
				<rich:column id="header_more">
				</rich:column>
				
				<rich:column id="header_rank"
						rendered="#{showRank}">
					<pia:piaSortLink name="Rank"
							sorting="rank"
							fileID="#{0}"
							bean="#{proteinViewerBean.sortHandler}"
							render="#{tableID} sort_settings_outpanel"
							active="#{sortable}" />
				</rich:column>
				
				<rich:column id="header_accessions">
					<h:outputText value="Accessions" />
				</rich:column>
				
				<rich:column id="header_is_decoy"
						rendered="#{isFDRCalculated}">
					<h:outputText value="Decoy" />
				</rich:column>
				
				<rich:column id="header_score">
					<pia:piaSortLink name="Score"
							sorting="protein_score"
							fileID="#{0}"
							bean="#{proteinViewerBean.sortHandler}"
							render="#{tableID} sort_settings_outpanel"
							active="#{sortable}" />
				</rich:column>
				
				<rich:column id="header_fdr_q_value"
						rendered="#{proteinViewerBean.FDRHandler.isFDRCalculated}">
					<h:outputText value="FDR q-Value" />
				</rich:column>
				
				<rich:column id="header_nr_peptides">
					<pia:piaSortLink name="#Peptides"
							sorting="nr_peptides"
							fileID="#{0}"
							bean="#{proteinViewerBean.sortHandler}"
							render="#{tableID} sort_settings_outpanel"
							active="#{sortable}" />
				</rich:column>
				
				<rich:column id="header_nr_psms">
					<pia:piaSortLink name="#PSMs"
							sorting="nr_psms"
							bean="#{proteinViewerBean.sortHandler}"
							fileID="#{0}"
							render="#{tableID} sort_settings_outpanel"
							active="#{sortable}" />
				</rich:column>
				
				<rich:column id="header_nr_spectra">
					<pia:piaSortLink name="#Spectra"
							sorting="nr_spectra"
							bean="#{proteinViewerBean.sortHandler}"
							fileID="#{0}"
							render="#{tableID} sort_settings_outpanel"
							active="#{sortable}" />
				</rich:column>
			</rich:columnGroup>
		</f:facet>
		
		
		<rich:column id="more">
			<a4j:commandLink id="toggle_peptides"
					title="show/hide peptides"
					action="#{proteinViewerBean.toggleShowPeptides}"
					execute="@this"
					render="report_grid"
					onbegin="#{rich:component('processingPanel')}.show();"
					oncomplete="#{rich:component('processingPanel')}.hide();">
				<a4j:param id="toggle_peptides_param"
						assignTo="#{proteinViewerBean.toggleProtein}"
						value="#{proteinRow.ID}"/>
				<h:graphicImage name="plus_icon.png"
						library="images"
						alt="show peptides"
						styleClass="more_less_icon plus_icon"
						rendered="#{!proteinViewerBean.showProteinsPeptides(proteinRow.ID)}"/>
				<h:graphicImage name="minus_icon.png"
						library="images"
						alt="hide peptides"
						styleClass="more_less_icon minus_icon"
						rendered="#{proteinViewerBean.showProteinsPeptides(proteinRow.ID)}"/>
			</a4j:commandLink>
			<a4j:commandLink id="show_inference_graph"
					onclick="updateInTreePopup('protein', '#{proteinRow.ID}');"
					title="show protein group in tree"
					rendered="#{showInferenceGraph}">
				<h:graphicImage name="tree_icon.png"
						library="images"
						alt="show group in tree - icon"
						styleClass="click_icon" />
				<rich:componentControl target="in_pia_tree_panel"
						operation="show" />
			</a4j:commandLink>
			<a4j:commandLink id="toggle_sub_proteins"
					title="show/hide sub proteins"
					action="#{proteinViewerBean.toggleShowSubProteins}"
					execute="@this"
					rendered="#{showSubsets and (proteinRow.subSets.size() > 0)}"
					render="report_grid"
					onbegin="#{rich:component('processingPanel')}.show();"
					oncomplete="#{rich:component('processingPanel')}.hide();">
				<a4j:param id="toggle_sub_proteins_param"
						assignTo="#{proteinViewerBean.toggleProtein}"
						value="#{proteinRow.ID}"/>
				<h:graphicImage name="subgroup_icon.png"
						library="images"
						alt="show/hide sub proteins"
						styleClass="click_icon"/>
			</a4j:commandLink>
		</rich:column>
		
		<rich:column id="rank"
				sortBy="#{proteinRow}"
				sortType="custom"
				comparator="#{proteinViewerBean.sortHandler.getProteinComparator('rank')}"
				sortOrder="#{proteinViewerBean.sortHandler.getOrder('rank')}"
				rendered="#{showRank}">
			<h:outputText value="#{proteinRow.rank}" />
		</rich:column>
		
		<rich:column id="accessions">
			<rich:collapsiblePanel id="accessions_panel"
					expanded="false"
					switchType="client"
					header="Accessions (#{proteinRow.accessions.size()})"
					rendered="#{proteinRow.accessions.size() > 1}">
				<rich:list value="#{proteinRow.accessions}"
						var="acc"
						type="unordered"
						styleClass="accessions">
					<a4j:outputPanel id="accession_and_description"
							styleClass="accession_and_description"
							layout="block">
						<a4j:outputPanel id="accession"
								styleClass="accession">
							<h:outputText value="#{acc.accession}" />
							<h:outputText value=" (decoy)"
									rendered="#{proteinRow.getAccessionDecoyState(acc.accession)}"/>
						</a4j:outputPanel>
						<h:graphicImage name="plus_icon.png"
								library="images" alt="show description"
								styleClass="more_less_icon"
								onclick="$(this).toggle().parent().children('.description').toggle()"/>
						<a4j:outputPanel id="description"
								styleClass="description"
								style="display:none;"
								layout="inline">
							<h:outputText value=": #{acc.getDescription(cc.attrs.fileID)}" />
							<h:graphicImage name="minus_icon.png"
									library="images" alt="hide description"
									styleClass="more_less_icon"
									onclick="$(this).parent().toggle().parent().children('.more_less_icon').toggle()"/>
						</a4j:outputPanel>
						
						<a4j:commandLink>
							<h:outputText
									value="#{proteinRow.getCoverage(acc.accession)*100}"
									rendered="#{proteinRow.getCoverage(acc.accession) != null}">
								<f:convertNumber type="number"
										pattern="(cov'.' #0.00'%')"/>
							</h:outputText>
							<rich:componentControl target="sequencePanel" operation="show" />
						</a4j:commandLink>
						
						<rich:popupPanel id="sequencePanel"
								modal="true"
								resizeable="true"
								width="1100"
								height="700"
								onmaskclick="#{rich:component('sequencePanel')}.hide()">
							<f:facet name="header">
								<h:outputText value="Sequence and coverage of #{acc.accession}" />
							</f:facet>
							<f:facet name="controls">
								<h:outputLink value="#" onclick="#{rich:component('sequencePanel')}.hide(); return false;">
									X
								</h:outputLink>
					        </f:facet>
					        
							<piacomponents:proteinSequenceWithCoverage
									sequence="#{acc.dbSequence}"
									coveragemap="#{proteinRow.getCoverageMap(acc.accession)}"
									styleClass="protein_sequence"
									bodyClass="protein_sequence_body">
							</piacomponents:proteinSequenceWithCoverage>
						</rich:popupPanel>
						
					</a4j:outputPanel>
				</rich:list>
			</rich:collapsiblePanel>
			
			<rich:list value="#{proteinRow.accessions}"
					var="acc"
					type="unordered"
					rendered="#{proteinRow.accessions.size() == 1}"
					styleClass="accessions">
				<a4j:outputPanel id="accession_and_description"
						styleClass="accession_and_description"
						layout="block">
					<a4j:outputPanel id="accession"
							styleClass="accession">
						<h:outputText value="#{acc.accession}" />
						<h:outputText value=" (decoy)"
								rendered="#{proteinRow.getAccessionDecoyState(acc.accession)}"/>
					</a4j:outputPanel>
					<h:graphicImage name="plus_icon.png"
							library="images" alt="show description"
							styleClass="more_less_icon"
							onclick="$(this).toggle().parent().children('.description').toggle()"/>
					<a4j:outputPanel id="description"
							styleClass="description"
							style="display:none;"
							layout="inline">
						<h:outputText value=": #{acc.getDescription(cc.attrs.fileID)}" />
						<h:graphicImage name="minus_icon.png"
								library="images" alt="hide description"
								styleClass="more_less_icon"
								onclick="$(this).parent().toggle().parent().children('.more_less_icon').toggle()"/>
					</a4j:outputPanel>
					
					<a4j:commandLink>
						<h:outputText
								value="#{proteinRow.getCoverage(acc.accession)*100}"
								rendered="#{proteinRow.getCoverage(acc.accession) != null}">
							<f:convertNumber type="number"
									pattern="(cov'.' #0.00'%')"/>
						</h:outputText>
						<rich:componentControl target="sequencePanel" operation="show" />
					</a4j:commandLink>
					
					<rich:popupPanel id="sequencePanel"
							modal="true"
							resizeable="true"
							width="1100"
							height="700"
							onmaskclick="#{rich:component('sequencePanel')}.hide()">
						<f:facet name="header">
							<h:outputText value="Sequence and coverage of #{acc.accession}" />
						</f:facet>
						<f:facet name="controls">
							<h:outputLink value="#" onclick="#{rich:component('sequencePanel')}.hide(); return false;">
								X
							</h:outputLink>
				        </f:facet>
				        
						<piacomponents:proteinSequenceWithCoverage
								sequence="#{acc.dbSequence}"
								coveragemap="#{proteinRow.getCoverageMap(acc.accession)}"
								styleClass="protein_sequence"
								bodyClass="protein_sequence_body">
						</piacomponents:proteinSequenceWithCoverage>
					</rich:popupPanel>
					
				</a4j:outputPanel>
			</rich:list>
			
		</rich:column>
		
		<rich:column id="isDecoy"
				rendered="#{isFDRCalculated}">
			<h:outputText value="D" rendered="#{proteinRow.isDecoy}" />
		</rich:column>
		
		<rich:column id="protein_score"
				sortBy="#{proteinRow}"
				sortType="custom"
				comparator="#{proteinViewerBean.sortHandler.getProteinComparator('protein_score')}"
				sortOrder="#{proteinViewerBean.sortHandler.getOrder('protein_score')}">
			<h:outputText value="#{psmViewerBean.convertScore(proteinRow.score)}"/>
		</rich:column>
		
		<rich:column id="fdr_q_value"
				rendered="#{proteinViewerBean.FDRHandler.isFDRCalculated}">
			<h:outputText value="#{psmViewerBean.convertScore(proteinRow.QValue)}"/>
		</rich:column>
		
		<rich:column id="nr_peptides"
				sortBy="#{proteinRow}"
				sortType="custom"
				comparator="#{proteinViewerBean.sortHandler.getProteinComparator('nr_peptides')}"
				sortOrder="#{proteinViewerBean.sortHandler.getOrder('nr_peptides')}">
			<h:outputText value="#{proteinRow.nrPeptides}" />
		</rich:column>
		
		<rich:column id="nr_psms"
				sortBy="#{proteinRow}"
				sortType="custom"
				comparator="#{proteinViewerBean.sortHandler.getProteinComparator('nr_psms')}"
				sortOrder="#{proteinViewerBean.sortHandler.getOrder('nr_psms')}">
			<h:outputText value="#{proteinRow.nrPSMs}" />
		</rich:column>
		
		<rich:column id="nr_spectra"
				sortBy="#{proteinRow}"
				sortType="custom"
				comparator="#{proteinViewerBean.sortHandler.getProteinComparator('nr_spectra')}"
				sortOrder="#{proteinViewerBean.sortHandler.getOrder('nr_spectra')}">
			<h:outputText value="#{proteinRow.nrSpectra}" />
		</rich:column>
		
		<rich:column id="peptides"
				breakRowBefore="true"
				colspan="#{6 + (cc.attrs.showRank  ? 1 : 0)}"
				rendered="#{proteinViewerBean.showProteinsPeptides(proteinRow.ID)}">
			
			<h:outputText value="Peptides:"
					styleClass="peptides_textheader" />
			
			<peptide:peptideTable tableID="peptides_table"
					peptideList="#{proteinViewerBean.getProteinsPeptides(proteinRow.ID)}"
					fileID="0"
					psmViewerBean="#{psmViewerBean}"
					peptideViewerBean="#{peptideViewerBean}"
					showScroller="false"
					showRank="false"
					rows="0"
					sortable="false" 
					showCombinedFDRScore="false" />
		</rich:column>
		
	</ui:composition>
</body>
</html>